# docker compose file for running a 3-node PostgreSQL cluster
# with 3-node consul cluster as the DCS and one haproxy node
version: "2"

networks:
    demo:

services:
    consul1:
        image: patroni
        container_name: demo-consul1
        hostname: consul1
        networks: [ demo ]
        ports: 
            - "8500:8500"
        command: consul agent -server -bootstrap -client 0.0.0.0 -retry-join consul1 -retry-join consul2 -retry-join consul3 -ui -data-dir=/tmp/consul

    consul2:
        image: patroni
        container_name: demo-consul2
        hostname: consul2
        networks: [ demo ]
        command: consul agent -client 0.0.0.0 -retry-join consul1 -retry-join consul2 -retry-join consul3 -ui -data-dir=/tmp/consul
        depends_on:
            - consul1

    consul3:
        image: patroni
        
        container_name: demo-consul3
        hostname: consul3
        networks: [ demo ]
        command: consul agent -client 0.0.0.0 -retry-join consul1 -retry-join consul2 -retry-join consul3 -ui -data-dir=/tmp/consul
        depends_on:
            - consul1
    haproxy:
        image: patroni
        networks: [ demo ]
        env_file: docker/patroni.env
        hostname: haproxy
        container_name: demo-haproxy
        depends_on:
            - consul1
            - consul2
            - consul3
        ports:
            - "5000:5000"
            - "5001:5001"
            - "7000:7000"
        command: haproxy
        environment: &haproxy_env
            CONSUL_ENDPOINTS: http://consul1:8500,http://consul2:8500,http://consul3:8500
            PATRONI_SCOPE: demo

    patroni1:
        image: patroni
        networks: [ demo ]
        env_file: docker/patroni.env
        hostname: patroni1
        container_name: demo-patroni1
        depends_on:
            - haproxy
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni1

    patroni2:
        image: patroni
        networks: [ demo ]
        env_file: docker/patroni.env
        hostname: patroni2
        container_name: demo-patroni2
        depends_on:
            - haproxy
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni2

    patroni3:
        image: patroni
        networks: [ demo ]
        env_file: docker/patroni.env
        hostname: patroni3
        container_name: demo-patroni3
        depends_on:
            - haproxy
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni3

#    pgbouncer:
#        image: edoburu/pgbouncer   
#        networks:
#            - postgres-backend
#        ports:
#            - "5432:5432"
#        depends_on:
#            - patroni
#        environment:
#            ADMIN_USERS: admin
#            DB_HOST: patroni
#            DB_USER: admin
#            DB_PASSWORD: admin
#            POOL_MODE: transaction
#            MAX_CLIENT_CONN: 1000
#            DEFAULT_POOL_SIZE: 300
#        restart: unless-stopped
